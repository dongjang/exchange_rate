services:
  # Prometheus - 메트릭 수집
  prometheus:
    image: prom/prometheus:latest
    container_name: exchange-rate-user-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus-prod.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - user-network

  # Grafana - 대시보드
  grafana:
    image: grafana/grafana:latest
    container_name: exchange-rate-user-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-user}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_USER_PASSWORD}
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=smtp.gmail.com:587
      - GF_SMTP_USER=${GMAIL_USERNAME}
      - GF_SMTP_PASSWORD=${GMAIL_APP_PASSWORD}
      - GF_SMTP_FROM_ADDRESS=${GMAIL_USERNAME}
      - GF_SMTP_FROM_NAME=Grafana Alert (User App)
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - user-network

  # Node Exporter - 시스템 메트릭
  node-exporter:
    image: prom/node-exporter:latest
    container_name: exchange-rate-user-node-exporter
    ports:
      - "9101:9100"  # Admin과 포트 충돌 방지
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - user-network

  # cAdvisor - 컨테이너 메트릭 (선택사항)
  # cadvisor:
  #   image: gcr.io/cadvisor/cadvisor:latest
  #   container_name: exchange-rate-user-cadvisor
  #   ports:
  #     - "8082:8080"
  #   volumes:
  #     - /:/rootfs:ro
  #     - /var/run:/var/run:ro
  #     - /sys:/sys:ro
  #     - /var/lib/docker/:/var/lib/docker:ro
  #     - /dev/disk/:/dev/disk:ro
  #   privileged: true
  #   devices:
  #     - /dev/kmsg
  #   networks:
  #     - shared-network

volumes:
  prometheus_data:
  grafana_data:

networks:
  user-network:
    name: user-network
    driver: bridge

